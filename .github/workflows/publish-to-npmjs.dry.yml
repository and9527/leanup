

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # https://unix.stackexchange.com/questions/112023/how-can-i-replace-a-string-in-a-files
      - name: Replace alias in all package.json's
        run: |
          find packages -name "*.js" -type f -exec sed -i -e "s/@leanup/@${{env.alias}}/g" {} +
          find packages -name "*.json" -type f -exec sed -i -e "s/@leanup/@${{env.alias}}/g" {} +
          find packages -name "*.ts" -type f -exec sed -i -e "s/@leanup/@${{env.alias}}/g" {} +
          find packages -name "*.tsx" -type f -exec sed -i -e "s/@leanup/@${{env.alias}}/g" {} +
          find packages -name "*.svelte" -type f -exec sed -i -e "s/@leanup/@${{env.alias}}/g" {} +
          find packages -name "*.vue" -type f -exec sed -i -e "s/@leanup/@${{env.alias}}/g" {} +
          git diff
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: '${{env.registry}}'
          scope: '@${{env.alias}}'
      - name: Clear npm cache
        run: npm cache clean -f
      - name: Install and publish only @${{env.alias}}/stack
        run: |
          rm package-lock.json
          npm install --legacy-peer-deps
          npm publish --access=${{env.access}} --tag=${{env.tag}} || true
        working-directory: packages/stack/core
        env:
          NODE_AUTH_TOKEN: ${{env.token}}
      - name: Install and publish only @${{env.alias}}/stack-vite
        run: |
          rm package-lock.json
          npm install --legacy-peer-deps
          npm publish --access=${{env.access}} --tag=${{env.tag}} || true
        working-directory: packages/stack/bundlers/vite
        env:
          NODE_AUTH_TOKEN: ${{env.token}}
      - name: Install and publish only @${{env.alias}}/stack-webpack
        run: |
          rm package-lock.json
          npm install --legacy-peer-deps
          npm publish --access=${{env.access}} --tag=${{env.tag}} || true
        working-directory: packages/stack/bundlers/webpack
        env:
          NODE_AUTH_TOKEN: ${{env.token}}
      - name: Install and publish only @${{env.alias}}/lib
        run: |
          rm package-lock.json
          npm install --legacy-peer-deps
          npm publish --access=${{env.access}} --tag=${{env.tag}} || true
        working-directory: packages/lib
        env:
          NODE_AUTH_TOKEN: ${{env.token}}
      - name: Install and publish only @${{env.alias}}/stack-plugin-babel
        run: |
          rm package-lock.json
          npm install --legacy-peer-deps
          npm publish --access=${{env.access}} --tag=${{env.tag}} || true
        working-directory: packages/stack/plugin/babel
        env:
          NODE_AUTH_TOKEN: ${{env.token}}
      - name: Install and publish non @${{env.alias}}/lib, @${{env.alias}}/stack, @${{env.alias}}/stack-plugin-babel, @${{env.alias}}/stack-vite and @${{env.alias}}/stack-webpack
        run: |
          rm -rf packages/stack/core/dist packages/stack/webpack/dist
          npx lerna exec --ignore @template/* --ignore @${{env.alias}}/lib --ignore @${{env.alias}}/stack --ignore @${{env.alias}}/stack-plugin-babel --ignore @${{env.alias}}/stack-vite --ignore @${{env.alias}}/stack-webpack --stream -- npm install --legacy-peer-deps
          npx lerna exec --ignore @template/* --ignore @${{env.alias}}/lib --ignore @${{env.alias}}/stack --ignore @${{env.alias}}/stack-plugin-babel --ignore @${{env.alias}}/stack-vite --ignore @${{env.alias}}/stack-webpack --no-bail --stream -- npm publish --access=${{env.access}} --tag=${{env.tag}} || true
        env:
          NODE_AUTH_TOKEN: ${{env.token}}
      - name: Test all framework variants
        run: |
          rm ../.eslintrc.js
          sh wake-up-all.sh ${{env.alias}} ${{env.tag}}
        working-directory: scripts
        env:
          NODE_AUTH_TOKEN: ${{env.token}}
