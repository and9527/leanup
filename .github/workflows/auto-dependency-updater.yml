# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Auto dependency updater

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * 3'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: ['1.0', '1.1', '1.2']
    name: Update dependencies "v${{matrix.version}}"
    steps:
      - name: Checkout specific branch
        uses: actions/checkout@v2
        with:
          ref: 'release/${{matrix.version}}'
      - name: Git pull
        run: git pull
      - name: Set up Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14.x
      # - name: Install tools
      #   run: npm i lerna npm-check-updates --no-save
      # - name: Update dependencies
      #   run: npm run ncu
      - name: Install dependencies
        # run: npm run update
        run: npm ci
      # - name: Commit changed files
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     git add .
      #     git status
      #     git commit -m "Auto dependency update"
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: 'release/${{matrix.version}}'
      #     force: true
      # - name: Patch versioning
      #   if: ${{matrix.version != '1.2'}}
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     npx lerna version patch --no-push --yes
      # - name: Patch versioning
      #   if: ${{matrix.version == '1.2'}}
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     npx lerna version prerelease --no-push --yes
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: 'release/${{matrix.version}}'
      #     force: true
      # - name: Delete tag
      #   continue-on-error: true
      #   run: |
      #     git push --delete origin v${{fromJson(steps.lerna.outputs.lernaJson).version}}
      # - name: Read Lerna
      #   id: lerna
      #   run: |
      #     content=`cat ./lerna.json | tr -d "\n"`
      #     echo "::set-output name=lernaJson::$content"
      # - name: Create PreRelease
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GIT_PUSH_TOKEN }}
      #   with:
      #     body: 'You can find more details about the changes here: https://github.com/leanupjs/leanup/blob/master/CHANGELOG.md#${{fromJson(steps.lerna.outputs.lernaJson).version}}'
      #     draft: false
      #     prerelease: true
      #     release_name: Release ${{fromJson(steps.lerna.outputs.lernaJson).version}}
      #     tag_name: ${{fromJson(steps.lerna.outputs.lernaJson).version}}
      - name: Generate changelogs
        run: |
          npm i auto-changelog --no-save
          npx auto-changelog --release-summary --tag-pattern "^${{matrix.version}}.\d+" -o docs/changelog/index.md
          npx auto-changelog --release-summary
      - name: Commit changelogs
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git status
          git commit -m "Update changelogs"
      - name: Push changelogs
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GIT_PUSH_TOKEN }}
          branch: 'release/${{matrix.version}}'
          force: true
